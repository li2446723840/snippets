{
	// Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Print to console": {
		"scope": "javascript,typescript,php,java,css,html",
		"prefix": ["server"],
		"body": [
			"const express = require(\"express\");",
			"const bodyParser = require(\"body-parser\");",
			"const path = require(\"path\");",
			"const db = require(\"./module/db\");",
			"const tools = require(\"./module/tools\")",
			"const app = express();",
			"app.use(bodyParser.json());",
			"app.use(express.static(path.resolve(__dirname,\"../html\")));",
			"app.all(\"*\",function(req,res,next){",
			"	res.header(\"Access-Control-Allow-Origin\",\"*\");",
			"	// authorization授权",
			"	res.header(\"Access-Control-Allow-Headers\",\"content-type\");",
			"	res.header(\"Access-Control-Allow-Methods\",\"DELETE,PUT,POST,GET,OPTIONS\")",
			"	next();",
			"})",
			"// 以post形式提交的，地址为weibo",
			"app.post(\"/weibo\",async function (req,res) {",
			"	const {context} = req.body;",
			"	// num是查找的结果。",
			"	const num = await db.count(\"contextList\",{context});",
			"	// 重复",
			"	if(num > 0)  tools.json(res,-1,\"请不要重复提交\");",
			"	else{",
			"		try{",
			"			await db.insertOne(\"contextList\",{",
			"				context,",
			"				topNum:0,",
			"				downNum:0,",
			"				addTime:tools.getNowTime()",
			"			})",
			"			tools.json(res,1,\"添加成功\")",
			"		}catch (err){",
			"			tools.json(res);",
			"		}",
			"	}",
			"});",
			"// 以get形式提交，地址为weibo",
			"app.get(\"/weibo\",async function (req,res) {",
			"	// 指定的页数",
			"	let {pageIndex = 1} = req.query;",
			"	pageIndex = pageIndex/1;",
			"	// 总页数",
			"	let pageSum = 1;",
			"	// 每页要显示的文档数量",
			"	const limit = 3;",
			"	// 统计contextList的文档总数",
			"	const count = await db.count(\"contextList\");",
			"	pageSum = Math.ceil(count/limit);",
			"	if(pageSum < 1) pageSum = 1;",
			"	if(pageIndex > pageSum) pageIndex = pageSum;",
			"	if(pageIndex < 1) pageIndex = 1;",
			"	const skip = (pageIndex-1)*limit;",
			"	const contextList = await db.find(\"contextList\",{",
			"		sortObj:{",
			"			addTime:-1",
			"		},",
			"		limit,",
			"		skip",
			"	});",
			"	res.json({",
			"		ok:1,",
			"		contextList,",
			"		pageSum,",
			"		pageIndex",
			"	})",
			"})",
			"app.put(\"/weibo/:id/:type\",async function (req,res) {",
			"	const {id,type} = req.params;",
			"	// 默认踩",
			"	let $inc = {",
			"		downNum:1",
			"	}",
			"	// 如果type为1，修改为顶",
			"	if(type/1 === 1){",
			"		$inc = {",
			"			topNum:1",
			"		}",
			"	}",
			"	console.log(id);",
			"	await db.updateOneById(\"contextList\",id,{",
			"		$inc",
			"	})",
			"	tools.json(res,1,\"更新成功\")",
			"});",
			"// weibo/1",
			"app.delete(\"/weibo/:id\",function (req,res) {",
			"	const id = req.params.id;",
			"	db.deleteOneById(\"contextList\",id).then(results=>{",
			"		tools.json(res,1,\"成功\");",
			"	}).catch(err=>{",
			"		tools.json(res);",
			"	})",
			"})",
			"app.listen(80,function () {",
			"	console.log(\"success\");",
			"})",
		],
		"description": "Log output to console"
	}
}