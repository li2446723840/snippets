{
  "Print to console": {
    // "scope": "javascript,typescript",
    "prefix": ["throttle", "jieliu"],
    "body": [
      "// 节流时间戳版",
      "function throttle(func, wait) {",
      "  let previous = 0;",
      "  return function () {",
      "    let now = Date.now();",
      "    let context = this;",
      "    let args = arguments;",
      "    if (now - previous > wait) {",
      "      func.apply(context, args);",
      "      previous = now;",
      "    }",
      "  };",
      "}",
      "// 节流定时器版",
      "function throttle(func, wait) {",
      "  let timeout;",
      "  return function () {",
      "    let context = this;",
      "    let args = arguments;",
      "    if (!timeout) {",
      "      timeout = setTimeout(() => {",
      "        timeout = null;",
      "        func.apply(context, args);",
      "      }, wait);",
      "    }",
      "  };",
      "}",
      "// 节流结合版",
      "/**",
      " * @desc 函数节流",
      " * @param func 函数",
      " * @param wait 延迟执行毫秒数",
      " * @param type 1 表时间戳版，2 表定时器版",
      " */",
      "function throttle(func, wait, type) {",
      "  if (type === 1) {",
      "    let previous = 0;",
      "  } else if (type === 2) {",
      "    let timeout;",
      "  }",
      "  return function () {",
      "    let context = this;",
      "    let args = arguments;",
      "    if (type === 1) {",
      "      let now = Date.now();",
      "      if (now - previous > wait) {",
      "        func.apply(context, args);",
      "        previous = now;",
      "      }",
      "    } else if (type === 2) {",
      "      if (!timeout) {",
      "        timeout = setTimeout(() => {",
      "          timeout = null;",
      "          func.apply(context, args);",
      "        }, wait);",
      "      }",
      "    }",
      "  };",
      "}"
    ],
    "description": "节流函数：所谓节流，就是指连续触发事件但是在 n 秒中只执行一次函数。1、时间戳版。2、定时器版。3、结合版"
  }
}
